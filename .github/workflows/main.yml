name: SecurityPipeline (Vers찾o Final)

on: [push]

jobs:
  horusec-scan:
    name: Horusec SAST Scan
    runs-on: ubuntu-latest

    permissions:
      security-events: write
      contents: read

    steps:
      - name: 1. Check out code (Completo)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 2. Instalar Horusec
        run: |
          curl -fsSL https://raw.githubusercontent.com/ZupIT/horusec/main/deployments/scripts/install.sh | bash -s latest /usr/local/bin
          horusec version

      - name: 3. Rodar Scan (Gerando SARIF)
        run: |
          set -o pipefail
          horusec start -p . \
            -e="true" \
            --disable-docker="true" \
            --ignore="**/node_modules/**" \
            -o="sarif" \
            -O="./horusec-results.sarif" 2>&1 | tee horusec-run.log
          HORUSEC_EXIT=${PIPESTATUS[0]}

          if [ $HORUSEC_EXIT -ne 0 ]; then
            echo "Horusec retornou c처digo $HORUSEC_EXIT. Logs publicados como artefato."
            exit 0
          fi

          if [ ! -s "./horusec-results.sarif" ]; then
            echo "SARIF n찾o gerado (vazio). Logs publicados como artefato."
            exit 0
          fi

      - name: 4. Upload logs do Horusec
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: horusec-logs
          path: horusec-run.log

      - name: 5. Upload do Relat처rio SARIF
        if: always() && success() && hashFiles('horusec-results.sarif') != ''
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: horusec-results.sarif
          category: gerProjetos-sast
